name: GitHub CI

on:

  pull_request:

  push:

  schedule:
    - cron: 0 0 * * 0

defaults:
  run:
    shell: 'bash -Eeuo pipefail -x {0}'

jobs:

  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v1
      - id: set-matrix
        run: |
          jsonMatrix="$(git ls-files '*/Dockerfile' | xargs -n1 dirname | sort -u | jq -csR 'rtrimstr("\n") | split("\n") | { "dir": . }')"
          echo "::set-output name=matrix::$jsonMatrix"

  build-test:

    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v1

      - name: Prepare Environment
        run: docker system prune --all --force --volumes
      - name: Happy Eyeballs
        run: wget -qO- 'https://github.com/tianon/pgp-happy-eyeballs/raw/master/hack-my-builds.sh' | bash

      - name: Build Image
        env:
          DIR: ${{ matrix.dir }}
        run: |
          IMG="${DIR//\//-}"
          docker build -t "$IMG" "$DIR"

      - name: Run Tests
        env:
          DIR: ${{ matrix.dir }}
        run: |
          case "$DIR" in
            # tests fail on single-binary images :D
            sleeping-beauty | true) exit 0 ;;

            # tests fail on ONBUILD images :'(
            github-pages) exit 0 ;;
          esac
          IMG="${DIR//\//-}"
          git clone --depth 1 https://github.com/docker-library/official-images.git ~/oi
          ~/oi/test/run.sh "$IMG"

      - name: '"docker images"'
        run: docker images
