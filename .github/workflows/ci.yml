name: GitHub CI

on:
  pull_request:
  push:
  schedule:
    - cron: 0 0 * * 0

jobs:

  generate-matrix:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: 'bash -Eeuo pipefail -x {0}'
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v1
      - id: set-matrix
        run: |
          matrix="$(
            git ls-files '*/Dockerfile' \
              | xargs -n1 dirname \
              | sort -u \
              | jq -csR '
                rtrimstr("\n")
                | split("\n")
                | {
                  "include": [
                    .[] | {
                      "dir": .,
                      "name": ("tianon/" + (sub("/"; ":") | gsub("/"; "-")))
                    }
                  ]
                }
              '
          )"
          # TODO handle dependencies like "tianon/docker-master:*" properly
          echo "::set-output name=matrix::$matrix"

  test:
    needs: generate-matrix

    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: 'bash -Eeuo pipefail -x {0}'
        working-directory: ${{ matrix.dir }}
    env:
      IMG: ${{ matrix.name }}

    steps:
      - uses: actions/checkout@v1

      - name: Prepare Environment
        run: docker system prune --all --force --volumes
      - name: Happy Eyeballs
        run: wget -qO- 'https://github.com/tianon/pgp-happy-eyeballs/raw/master/hack-my-builds.sh' | bash

      - name: Build Image
        run: |
          docker build -t "$IMG" .

      - name: Run Tests
        run: |
          case "$IMG" in
            # tests fail on single-binary images :D
            tianon/sleeping-beauty | tianon/true) exit 0 ;;

            # tests fail on ONBUILD images :'(
            tianon/github-pages) exit 0 ;;
          esac
          git clone --depth 1 https://github.com/docker-library/official-images.git ~/oi
          ~/oi/test/run.sh "$IMG"

      - name: '"docker images"'
        run: docker images
